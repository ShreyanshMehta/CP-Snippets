<snippet>
	<content><![CDATA[
void lcs( string X, string Y, int m, int n ) { 
   int L[m+1][n+1]; 
   for (int i=0; i<=m; i++) { 
     for (int j=0; j<=n; j++) { 
       if (i == 0 || j == 0) 
         L[i][j] = 0; 
       else if (X[i-1] == Y[j-1]) 
         L[i][j] = L[i-1][j-1] + 1; 
       else
         L[i][j] = max(L[i-1][j], L[i][j-1]); 
     } 
   } 
  
   int index = L[m][n]; 
   string lcs=""; 
   int i = m, j = n; 
   while (i > 0 && j > 0) { 
      if (X[i-1] == Y[j-1]) { 
          lcs+= X[i-1]; // Put current character in result 
          i--; j--;     // reduce values of i, j and index 
      } 
      else if (L[i-1][j] > L[i][j-1]) 
         i--; 
      else
         j--; 
   } 
   reverse(lcs.begin(),lcs.end());
   if(lcs.size())
    cout<< lcs; 
   else
    cout<<"";
} 
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>lcs</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
