<snippet>
	<content><![CDATA[
const int MAXN = 2*1e5+5;
const int level = 20;

vector< vi > tree; 
vi depth; 
vector< vi > parent;  //2^level uppar wala parent

void dfs(int cur, int prev) { 
    depth[cur] = depth[prev] + 1; 
    parent[cur][0] = prev; 
    for (int i=0; i<tree[cur].size(); i++){ 
        if (tree[cur][i] != prev) 
            dfs(tree[cur][i], cur); 
    } 
} 
  
void precomputeSparseMatrix(int n){ 
    for (int i=1; i<level; i++) { 
        for (int node = 1; node <= n; node++) { 
            if (parent[node][i-1] != -1) 
                parent[node][i] = 
                    parent[parent[node][i-1]][i-1]; 
        } 
    } 
} 
  
int lca(int u, int v) { 
    if (depth[v] < depth[u]) 
        swap(u, v); 
    int diff = depth[v] - depth[u]; 
    for (int i=0; i<level; i++) 
        if ((diff>>i)&1) 
            v = parent[v][i]; 
    if (u == v) 
        return u; 
    for (int i=level-1; i>=0; i--) 
        if (parent[u][i] != parent[v][i]) { 
            u = parent[u][i]; 
            v = parent[v][i]; 
        } 
    return parent[u][0]; 
} 
  
void addEdge(int u,int v) { 
    tree[u].push_back(v); 
    tree[v].push_back(u); 
} 

/***********In main function*********/
// depth[0] = 0; 
// dfs(1,0); 
// precomputeSparseMatrix(n); 

void inti(int n){
    depth.assign(n+1, 0);
    parent.assign(n+1, vi(level, 0));
    tree.assign(n+1, {});
}

//Use addEdge(u,v) to add edges

]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>LCA-n</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
