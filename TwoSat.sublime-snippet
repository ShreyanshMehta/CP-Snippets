<snippet>
	<content><![CDATA[
struct TwoSet{
    stack<int>order;
    vector<bool>vis;
    vi comp_id, ans;
    int n, sz = 0;
    vector<vi>adj, Radj; //Adjacency list and its reverse

    TwoSet(int n){
        this->n = n;
        adj.assign(2*n, vi({}));
        Radj.assign(2*n, vi({}));
        vis.assign(2*n, 0);
        comp_id.assign(2*n, 0);
        ans.assign(n, 0);
    }

    void dfs1(int node){
        vis[node] = 1;
        for(auto it: adj[node]){
            if(!vis[it]) dfs1(it);
        }
        order.push(node);
    }

    void dfs2(int node){
        vis[node] = 0;
        for(auto it: Radj[node]){
            if(vis[it]) dfs2(it);
        }
        comp_id[node] = sz;
    }

    void addEdge(int u, int v){
        adj[u].push_back(v);
        Radj[v].push_back(u);
    }

    bool solve(){
        fi(0, 2*n){
            if(!vis[i]) dfs1(i);
        }

        while(!order.empty()){
            int node = order.top();
            order.pop();
            if(vis[node]) {
                dfs2(node);
                sz++;
            }
        }

        for(int i=0;i<n;i++){
            if(comp_id[(i<<1)] == comp_id[(i<<1)+1]) return 0;
            ans[i] = comp_id[(i<<1)] < comp_id[(i<<1)+1] ? 1 : 0;
        }
        return 1;
    }

};
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>twosat</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
